#!/usr/bin/env python3
"""
Server Configuration Script
Helps configure server environment variables for hosting the web UI.
"""

import os
import sys
from pathlib import Path


def create_server_config():
    """Interactive server configuration setup."""
    print("🌐 Omaha Poker Server Configuration")
    print("=" * 40)
    
    # Get current directory
    current_dir = Path.cwd()
    env_file = current_dir / ".env.server"
    
    # Check if .env.server already exists
    if env_file.exists():
        print(f"⚠️  Configuration file already exists: {env_file}")
        response = input("Do you want to overwrite it? (y/N): ").strip().lower()
        if response != 'y':
            print("Configuration cancelled.")
            return
    
    print("\nPlease provide the following configuration:")
    
    # Server settings
    port = input("Server port (default: 5001): ").strip()
    if not port:
        port = "5001"
    
    host = input("Server host (0.0.0.0 for external access, default: 0.0.0.0): ").strip()
    if not host:
        host = "0.0.0.0"
    
    # Client management
    print("\nClient Management:")
    allowed_clients = input("Allowed clients (* for all, or comma-separated list): ").strip()
    if not allowed_clients:
        allowed_clients = "*"
    
    max_clients = input("Maximum concurrent clients (default: 10): ").strip()
    if not max_clients:
        max_clients = "10"
    
    # UI Display options
    print("\nUI Display Options:")
    show_table_cards = input("Show table cards in UI? (Y/n): ").strip().lower()
    show_table_cards = "false" if show_table_cards == 'n' else "true"
    
    show_positions = input("Show player positions in UI? (Y/n): ").strip().lower()
    show_positions = "false" if show_positions == 'n' else "true"
    
    show_moves = input("Show move history in UI? (Y/n): ").strip().lower()
    show_moves = "false" if show_moves == 'n' else "true"
    
    show_solver_link = input("Show solver links in UI? (Y/n): ").strip().lower()
    show_solver_link = "false" if show_solver_link == 'n' else "true"
    
    # Create configuration content
    config_content = f"""# Omaha Poker Server Configuration
# Generated by config_server.py

# Server Settings
PORT={port}
HOST={host}

# Client Management
ALLOWED_CLIENTS={allowed_clients}
MAX_CLIENTS={max_clients}

# UI Display Configuration
SHOW_TABLE_CARDS={show_table_cards}
SHOW_POSITIONS={show_positions}
SHOW_MOVES={show_moves}
SHOW_SOLVER_LINK={show_solver_link}
"""
    
    # Write configuration file
    try:
        with open(env_file, 'w') as f:
            f.write(config_content)
        
        print(f"\n✅ Configuration saved to: {env_file}")
        print("\nTo start the server, run:")
        print("python main_server.py")
        
        print("\nConfiguration summary:")
        print(f"  Server: {host}:{port}")
        print(f"  Web UI: http://{host}:{port}")
        print(f"  Allowed clients: {allowed_clients}")
        print(f"  Max clients: {max_clients}")
        print(f"  UI Features: Cards={show_table_cards}, Positions={show_positions}, Moves={show_moves}, Solver={show_solver_link}")
        
        if host == "0.0.0.0":
            print(f"\n🌍 Server will be accessible from internet at:")
            print(f"  http://YOUR_PUBLIC_IP:{port}")
            print(f"  Make sure port {port} is open in your firewall")
        
    except Exception as e:
        print(f"❌ Error saving configuration: {str(e)}")
        sys.exit(1)


def show_usage():
    print("Usage: python config_server.py")
    print("\nThis script will help you configure the server for hosting the web UI.")
    print("\nOptions:")
    print("  --help    Show this help message")


if __name__ == "__main__":
    if len(sys.argv) > 1 and sys.argv[1] in ['--help', '-h']:
        show_usage()
    else:
        create_server_config()